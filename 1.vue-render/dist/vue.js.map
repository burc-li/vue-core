{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["/**\n * @name 重写数组7个可以改变自身的方法，切片编程\n * @todo 1. Vue 的响应式是通过 Object.defineProperty() 实现的，这个 api 没办法监听数组长度的变化，也就没办法监听数组的新增。\n * @todo 2. Vue 无法检测通过数组索引改变数组的操作，这不是 Object.defineProperty() api 的原因，而是尤大认为性能消耗与带来的用户体验不成正比。对数组进行响应式检测会带来很大的性能消耗，因为数组项可能会大，比如1000条、10000条。\n * @todo 3. defineProperty无法监听数组的新增，即无法触set方法。可手动对新增内容进行观测 并 手动触发更新 - ob.dep.notify()\n */\n\nlet oldArrayProto = Array.prototype // 获取数组的原型\n// newArrayProto.__proto__  = oldArrayProto\nexport let newArrayProto = Object.create(oldArrayProto)\n\n// 找到所有的变异方法\nlet methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice'] // concat slice 都不会改变原数组\n\nmethods.forEach(method => {\n  // 这里重写了数组的方法\n  newArrayProto[method] = function (...args) {\n    // args reset参数收集，args为真正数组，arguments为伪数组\n    const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法，函数的劫持，切片编程\n\n    // 我们需要对新增的数据再次进行劫持\n    let inserted\n    let ob = this.__ob__\n\n    switch (method) {\n      case 'push':\n      case 'unshift': // arr.unshift(1,2,3)\n        inserted = args\n        break\n      case 'splice': // arr.splice(0,1,{a:1},{a:1})\n        inserted = args.slice(2)\n      default:\n        break\n    }\n\n    if (inserted) {\n      // 对新增的内容再次进行观测\n      ob.observeArray(inserted)\n    }\n    return result\n  }\n})\n","/**\n * @name 数据劫持\n * @todo 1. 只对对象进行劫持\n * @todo 2. 如果一个对象被劫持过了，那就不需要再被劫持了 (要判断一个对象是否被劫持过，可以在对象上增添一个实例，用实例的原型链来判断是否被劫持过)\n * @todo 3. Object.defineProperty只能劫持已经存在的属性，对象新增属性和数组新增元素无法劫持 （vue会为此单独写一些api语法糖  $set $delete）\n * @todo 4. 循环对象，对属性依次递归劫持，性能差\n * @todo 5. setter方法中修改属性之后重新观测，目的：新值为对象或数组的话，可以劫持其数据\n * @todo 6. 重写数组7个可以改变自身的方法，切片编程\n * @todo 7. this 实例挂载到 data 数据上，将__ob__ 变成不可枚举，防止栈溢出【用于判断对象是否被劫持过 和 劫持变异数组新增数据】\n */\n\nimport { newArrayProto } from './array'\n\nclass Observer {\n  constructor(data) {\n    // data.__ob__ = this // 给数据加了一个标识 如果数据上有__ob__ 则说明这个属性被观测过了\n    Object.defineProperty(data, '__ob__', {\n      value: this,\n      enumerable: false, // 将__ob__ 变成不可枚举 （循环的时候无法获取到，防止栈溢出）\n    })\n\n    if (Array.isArray(data)) {\n      // 这里我们可以重写可以修改数组本身的方法 7个方法，切片编程：需要保留数组原有的特性，并且可以重写部分方法\n      data.__proto__ = newArrayProto\n      this.observeArray(data) // 如果数组中放的是对象 可以监控到对象的变化\n    } else {\n      this.walk(data)\n    }\n  }\n\n  // 循环对象\"重新定义属性\",对属性依次劫持，性能差\n  // \"重新定义属性\"，个人理解，和proxy类似，对象和proxy返回的代理对象并不全等，其引用不同；\n  // 入参属性为data[key]，使用defineProperty劫持之后，其属性变为响应式属性，和之前的普通属性断开了关联，可以理解为重新定义了属性\n  // 换句话来说，data[key]仅仅是给其对应的响应式属性提供了一个默认值，无任何关联\n  walk(data) {\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\n  }\n\n  // 观测数组\n  observeArray(data) {\n    data.forEach(item => observe(item))\n  }\n}\n\n// 使用defineProperty API进行属性劫持\nexport function defineReactive(target, key, value) {\n  // 深度属性劫持，对所有的对象都进行属性劫持\n  observe(value)\n\n  // Object.defineProperty只能劫持已经存在的属性，新增属性无法劫持 （vue里面会为此单独写一些语法糖  $set $delete）\n  Object.defineProperty(target, key, {\n    // 取值的时候 会执行get\n    get() {\n      console.log('get_v2')\n      return value\n    },\n    // 修改的时候 会执行set\n    set(newValue) {\n      console.log('set_v2')\n      if (newValue === value) return\n\n      // 修改属性之后重新观测，目的：新值为对象或数组的话，可以劫持其数据\n      observe(newValue)\n      value = newValue\n    },\n  })\n}\n\n// 数据观测\nexport function observe(data) {\n  // 只对对象进行劫持\n  if (typeof data !== 'object' || data == null) {\n    return\n  }\n\n  // 如果一个对象被劫持过了，那就不需要再被劫持了 (要判断一个对象是否被劫持过，可以在对象上增添一个实例，用实例的原型链来判断是否被劫持过)\n  if (data.__ob__ instanceof Observer) {\n    return data.__ob__\n  }\n\n  return new Observer(data)\n}\n","/**\n * @name Vue初始化状态、初始化数据\n * @todo 1. 对data进行劫持，并将data挂载到vm上 vm._data = data\n * @todo 2. 循环data，将vm._data用vm来代理\n */\n\nimport { observe } from './observe/index'\n\n// 初始化状态\nexport function initState(vm) {\n  const opts = vm.$options // 获取所有的选项\n  if (opts.data) {\n    initData(vm) // 初始化数据\n  }\n}\n\nfunction proxy(vm, target, key) {\n  Object.defineProperty(vm, key, {\n    // vm.name\n    get() {\n      return vm[target][key] // vm._data.name\n    },\n    set(newValue) {\n      vm[target][key] = newValue\n    },\n  })\n}\n\n\n// 初始化数据\nfunction initData(vm) {\n  let data = vm.$options.data // data可能是函数和对象\n  data = typeof data === 'function' ? data.call(vm) : data\n\n  vm._data = data // 我将返回的对象放到了_data上\n\n  // vue2采用 defineProperty API，对data进行劫持\n  observe(data)\n\n  // 将vm._data 用 vm来代理 ，访问 vm.name = vm._data.name\n  for (let key in data) {\n    if(key === '_data') return\n\n    proxy(vm, '_data', key)\n  }\n}\n","/**\n * @name 给Vue扩展初始化方法\n */\n\n// import { compileToFunction } from './compiler'\n// import { mountComponent } from './lifecycle'\nimport { initState } from './state'\n\n// 就是给Vue增加init方法的\nexport function initMixin(Vue) {\n  // 用于初始化操作\n  Vue.prototype._init = function (options) {\n    // vm.$options 就是获取用户的配置\n    const vm = this\n    vm.$options = options // 将用户的选项挂载到实例上\n\n    // 初始化状态\n    initState(vm)\n\n    // if (options.el) {\n    //   vm.$mount(options.el) // 实现数据的挂载\n    // }\n  }\n  // Vue.prototype.$mount = function (el) {\n  //   const vm = this\n  //   el = document.querySelector(el)\n  //   let ops = vm.$options\n  //   if (!ops.render) {\n  //     // 先进行查找有没有render函数\n  //     let template // 没有render看一下是否写了tempate, 没写template采用外部的template\n  //     if (!ops.template && el) {\n  //       // 没有写模板 但是写了el\n  //       template = el.outerHTML\n  //     } else {\n  //       if (el) {\n  //         template = ops.template // 如果有el 则采用模板的内容\n  //       }\n  //     }\n  //     // 写了temlate 就用 写了的template\n  //     if (template && el) {\n  //       // 这里需要对模板进行编译\n  //       const render = compileToFunction(template)\n  //       ops.render = render // jsx 最终会被编译成h('xxx')\n  //     }\n  //   }\n  //   mountComponent(vm, el) // 组件的挂载\n  //   // 最终就可以获取render方法\n  //   // script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\n  //   // runtime是不包含模板编译的, 整个编译是打包的时候通过loader来转义.vue文件的, 用runtime的时候不能使用template\n  // }\n}\n","/**\r\n * @name 实现Vue构造函数\r\n */\r\n\r\nimport { initMixin } from \"./init\";\r\n// import { initLifeCycle } from \"./lifecycle\";\r\n\r\n// 通过构造函数扩展方法\r\nfunction Vue(options){ // options就是用户的选项\r\n    this._init(options); // 默认就调用了init\r\n}\r\n\r\ninitMixin(Vue); // 在Vue原型上扩展init方法\r\n// initLifeCycle(Vue);\r\n\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","Observer","constructor","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","console","log","set","newValue","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options"],"mappings":"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"}